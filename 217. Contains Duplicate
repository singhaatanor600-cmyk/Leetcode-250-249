class Solution {
    public boolean containsDuplicate(int[] nums) {
        Set <Integer> check= new HashSet<>();
        for(int i=0;i<nums.length;i++){
            if(check.contains(nums[i])){
                return true;
            }
            check.add(nums[i]);
        }
            return false;
    }
}
//The code uses a HashSet, which only stores unique elements.

As it loops through each number in the array:

If a number is already in the set, it means we've seen it before â†’ duplicate found â†’ return true.

Otherwise, add the number to the set and continue.

If the loop finishes without finding any duplicates, return false.

ðŸ’¡ Example Walkthrough:

Letâ€™s say:

nums = [1, 2, 3, 4, 1]


Step 1: check = {} (empty set)

i = 0 â†’ 1 not in set â†’ add â†’ check = {1}

i = 1 â†’ 2 not in set â†’ add â†’ check = {1, 2}

i = 2 â†’ 3 not in set â†’ add â†’ check = {1, 2, 3}

i = 3 â†’ 4 not in set â†’ add â†’ check = {1, 2, 3, 4}

i = 4 â†’ 1 is in set â†’ return true //
